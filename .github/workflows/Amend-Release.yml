name: Amend Release with yarn.lock update

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to trigger workflow on'
        required: true
        default: 'release-please--branches--main'

jobs:
  Amend-Release:
    strategy:
      matrix:
        node-version: [18.x]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          scope: '@spotify-confidence'
      - name: Enable corepack
        shell: bash
        run: corepack enable
      - name: Fix constraints
        shell: bash
        run: yarn constraints --fix
      - name: Install dependencies
        shell: bash
        run: yarn install
        env:
          YARN_ENABLE_IMMUTABLE_INSTALLS: false
      - name: Run tests and validations
        run: |
          echo "Running yarn bundle"
          yarn bundle > /dev/null 2>&1
          bundle_exit_code=$?

          echo "Running yarn lint"
          yarn lint > /dev/null 2>&1
          lint_exit_code=$?

          echo "Running yarn format check"
          yarn format:check > /dev/null 2>&1
          format_exit_code=$?

          echo "Running yarn test"
          yarn test > /dev/null 2>&1
          test_exit_code=$?

          export COMMENT="Bundle Exit Code: $bundle_exit_code\nLint Exit Code: $lint_exit_code\nFormat Check Exit Code: $format_exit_code\nTest Exit Code: $test_exit_code"
      - name: Commit and push changes changes in yarn.lock
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git add -u
          if ! git diff --staged --stat --exit-code; then
            git config user.name "confidence-bot"
            git config user.email "confidence+bot@spotify.com"
            git add yarn.lock
            git commit -m "chore: auto update yarn.lock"
            git push
          fi

      - name: Install GitHub CLI
        run: |
          sudo apt-get install gh

      - name: Find open PRs for branch
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: find-prs
        run: |
          gh pr list --head "${{ github.event.inputs.branch }}" --state open --json number --jq '.[].number' > pr_numbers.txt

      - name: Post comment on PRs
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          while IFS= read -r pr_number; do
            gh pr comment $pr_number --body "$COMMENT"
          done < pr_numbers.txt
